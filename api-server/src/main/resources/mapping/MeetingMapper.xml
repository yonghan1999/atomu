<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atomu.apiserver.mapper.MeetingMapper">
  <resultMap id="BaseResultMap" type="com.atomu.apiserver.entity.Meeting">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="start" jdbcType="TIMESTAMP" property="start" />
    <result column="end" jdbcType="TIMESTAMP" property="end" />
    <result column="realEnd" jdbcType="TIMESTAMP" property="realend" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, code, start, end, realEnd, name
  </sql>

  <select id="selectByPrimaryKey" parameterType="com.atomu.apiserver.entity.Meeting" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from meeting
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByUid" parameterType="com.atomu.apiserver.entity.Meeting" resultType="com.atomu.apiserver.entity.Meeting">
    select
    <include refid="Base_Column_List" />
    from meeting
    where uid = #{uid,jdbcType=INTEGER} AND end > #{end,jdbcType=TIMESTAMP} ORDER BY `start`
  </select>


  <select id="selectByCode" parameterType="com.atomu.apiserver.entity.Meeting" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from meeting
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.atomu.apiserver.entity.Meeting">
    delete from meeting
    where id = #{id,jdbcType=INTEGER} AND uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCode" parameterType="com.atomu.apiserver.entity.Meeting">
    delete from meeting
    where code = #{code,jdbcType=VARCHAR} AND uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.atomu.apiserver.entity.Meeting">
    insert into meeting (id, uid, code, 
      start, end, realEnd, name
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, 
      #{start,jdbcType=TIMESTAMP}, #{end,jdbcType=TIMESTAMP}, #{realend,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.atomu.apiserver.entity.Meeting">
    insert into meeting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="start != null">
        start,
      </if>
      <if test="end != null">
        end,
      </if>
      <if test="realend != null">
        realEnd,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="end != null">
        #{end,jdbcType=TIMESTAMP},
      </if>
      <if test="realend != null">
        #{realend,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.atomu.apiserver.entity.Meeting">
    update meeting
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        start = #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="end != null">
        end = #{end,jdbcType=TIMESTAMP},
      </if>
      <if test="realend != null">
        realEnd = #{realend,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atomu.apiserver.entity.Meeting">
    update meeting
    set uid = #{uid,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      start = #{start,jdbcType=TIMESTAMP},
      end = #{end,jdbcType=TIMESTAMP},
      realEnd = #{realend,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByCode" parameterType="com.atomu.apiserver.entity.Meeting">
    update meeting
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        start = #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="end != null">
        end = #{end,jdbcType=TIMESTAMP},
      </if>
      <if test="realend != null">
        realEnd = #{realend,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where code = #{code,jdbcType=INTEGER}
  </update>
</mapper>